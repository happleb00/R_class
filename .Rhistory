help("Compare")
mexloc[which(unqloc$Locality == mexloc$Locality[i])]
for (i in length(mexloc)){
x[i] <- mexloc[which(unqloc$Locality == mexloc$Locality[i])]
}
head(x[i])
for (i in length(mexloc)){
x <- mexloc[which(unqloc$Locality == mexloc$Locality[i])]
}
head(x)
for (i in length(mexloc)){
blah <- mexloc[which(unqloc$Locality == mexloc$Locality[i])]
}
head(blah)
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
head(mexloc)
mexlocsub <- subset(mexloc, select = Locality)
#summary(mexlocsub)
#head(mexlocsub)
unqloc <- unique(mexloc, nmax=1)
unqlocsub <- subset(unqloc, select = Locality)
#summary(unqloc)
#print(unqloc)
#head(unqloc)
#head(unqlocsub)
#all.equal(mexlocsub, unqloc)
for (i in length(mexloc)){
blah <- mexloc[which(unqloc$Locality == mexloc$Locality[i])]
}
head(blah)
help("match")
match(unqloc, mexloc)
match(unqlocsub, mexlocsub)
for (i in length(unqloc)){
blah <- match(unqlocsub[i], mexlocsub)
}
head(blah)
for (i in 1:10){
blah <- match(unqlocsub, mexlocsub)
}
head(blah)
for (i in 1:10){
blah <- match(unqlocsub[i], mexlocsub[i])
}
head(blah)
help("duplicated")
head(mexlocsub)
head(mexloc)
if (subset(mexloc, select = Locality) == subset(unqloc, select = Locality))
else print(y)
for (i in 1:10){
for (j in 1:10){
if (unqlocsub[i] == mexlocsub[j])
else print(yes)
}
}
head(blah)
if (unqlocsub[i] == mexlocsub[j]) else print(yes)
dubmex <- duplicated(mexloc)
head(dubmex)
head(mexloc)
fulllist <- rbind(unqloc,mexloc)
head(fulllist)
fulllist <- rbind(unqloc,mexloc)
head(fulllist)
dubmex <- duplicated(fulllist)
head(fulllist)
fulllist <- rbind(unqloc,mexloc)
head(fulllist)
dubmex <- duplicated(fulllist)
head(dubmex)
head(fulllist)
##create a function that will calculate the mean of one of two pollutants from 332 .csv files
all.equal(mexlocsub, unqloc)
help(unique)
if (dupes=TRUE, print(subset(mexloc, select = Locality)))
dupes <- duplicated(mexloc)
#head(dubmex)
if (dupes=TRUE, print(subset(mexloc, select = Locality)))
dupes <- duplicated(mexloc)
return <- if (dupes=TRUE, print(subset(mexloc, select = Locality)))
return
for (i in 1:10){
dupes <- duplicated(mexloc[1])
return <- if (dupes=TRUE, print(subset(mexloc, select = Locality)))
}
return
for (i in 1:10){
dupes <- duplicated(mexloc[i])
return <- if (dupes=TRUE, print(subset(mexloc, select = Locality)))
}
return
dupes <- duplicated(mexloc[1:10])
return <- if (dupes=TRUE, print(subset(mexloc, select = Locality)))
head(dupes)
for (i in 1:10){
dupes <- duplicated(mexloc[1:10])
#head(dupes)
return <- if ([1] = TRUE, print(subset(mexloc, select = Locality)))
}
return
for (i in 1:10){
dupes <- duplicated(mexloc[1:10])
#head(dupes)
return <- if (dupes$1 = TRUE, print(subset(mexloc, select = Locality)))
}
return
return <- if (dupes$1 = TRUE, print(subset(mexloc, select = Locality)))
for (i in 1:10){
dupes <- duplicated(mexloc[1:10])
#head(dupes)
return <- if (dupes$1 = TRUE, print(subset(mexloc[i], select = Locality)))
}
return
for (i in 1:10){
return1 <- print(subset(mexloc[i], select = Locality)))
}
return1
for (i in 1:10){
return1 <- print(subset(mexloc[i], select = Locality)))
}
for (i in 1:10){
return1 <- print(subset(mexloc[i], select = Locality))
}
return1
for (i in 1:10){
return1 <- print(mexloc[i])
}
read.table(unqloc[i], header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
for (i in 1:10){
unqlo1 <- read.table(unqloc[i], header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
}
head(unqloc1)
for (i in 1:10){
allfiles <- read.table("PBI_Mexico_data.txt[i]", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
}
head(allfiles)
for (i in 1:10){
allfiles <- mexlocfull[i]
}
head(allfiles)
for (i in 1:10){
allfiles <- mexloc[i]
}
head(allfiles)
for (i in 1:10){
allfiles <- mexloc[i]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:10){
allfiles <- mexloc[i]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:10){
allfiles <- mexloc[i]
dupes <- duplicated(allfiles, na.rm=TRUE),
}
head(dupes)
for (i in 1:10){
allfiles <- mexloc[,i]
dupes <- duplicated(allfiles, na.rm=TRUE),
}
head(dupes)
for (i in 1:10){
allfiles <- mexloc[,i]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:10){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:300){
allfiles <- mexloc[,i]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles, na.rm=TRUE)
}
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
}
head(dupes)
head(allfiles)
allfiles <- mexloc[,i]
for (i in 1:300){
allfiles <- mexloc[i,c(4:9)]
dupes <- duplicated(allfiles)
}
head(allfiles)
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
}
head(allfiles)
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
print(dupes <- duplicated(allfiles))
}
if dupes <- duplicated(allfiles) ==TRUE
if duplicated(allfiles) ==TRUE
ifelse(duplicated(allfiles)==TRUE, print(hello))
help(ifelse)
for (i in 1:300){
allfiles <- mexloc[i,]
ifelse(duplicated(allfiles)==TRUE, print(hello), no)
}
for (i in 1:300){
allfiles <- mexloc[i,]
return <- ifelse(duplicated(allfiles)==TRUE, print(hello), print(no)
}
head(return)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
return <- ifelse(subset(dupes, select = 1)==TRUE, print(hello), print(no))
}
head(return)
#head(allfiles)
#head(dupes)
head(return)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
return <- ifelse(subset(dupes, select = [,1])==TRUE, print(hello), print(no))
}
head(return)
return
head(dupes)
allfiles <- mexloc(i)
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
allfiles <- mexloc(i)
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
allfiles <- mexloc[i,]
head(allfiles)
for (i in 1:300){
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
}
for (i in 1:300){
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
}
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
head(mexloc)
unqloc <- unique(mexloc, nmax=1)
head(unqloc)
allfiles <- mexloc[i,]
head(allfiles)
dupes <- duplicated(allfiles)
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles)
}
head(allfiles)
head(dupes)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- duplicated(allfiles, header = TRUE)
}
head(dupes)
mexloc[duplicated(mexloc),]
dupes2 <- mexloc[duplicated(mexloc),]
head(dupes2)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- mexloc[duplicated(allfiles),]
}
head(dupes)
unqloc <- unique(mexloc[duplicated(mexloc),])
head(unqloc)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- unique(mexloc[duplicated(mexloc[i,]),])
}
head(dupes)
ead(allfiles)
head(allfiles)
#head(mexloc)
head(unqloc)
dupe <- duplicated(mexloc)
head(dupe)
head(mexlocsub)
possible <- rbind(unqloc,mexloc)
head(possible)
help(rbind)
unqloc <- unique(mexloc, nmax=1)
mexloc <- mexlocfull[,c(4:9)]
#head(mexloc)
##how to subset mexloc Localities
#mexlocsub <- subset(mexloc, select = Locality)
#summary(mexlocsub)
#head(mexlocsub)
## is the row a duplicate? reads the duplicate as
##TRUE after the original has been read
dupe <- duplicated(mexloc)
#head(dupe)
##list of unique duplicated localities
unqloc <- unique(mexloc, nmax=1)
#unqloc <- unique(mexloc[duplicated(mexloc),])
#summary(unqloc)
#head(unqloc)
##how to subset unique Localities
#unqlocsub <- subset(unqloc, select = Locality)
#head(unqlocsub)
#all.equal(mexlocsub, unqloc)
possible <- rbind(unqloc,mexloc)
head(possible)
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
mexloc <- mexlocfull[,c(4:9)]
unqloc <- unique(mexloc, nmax=1)
possible <- rbind(unqloc,mexloc)
head(possible)
possible <- rbind(mexloc,unqloc)
head(possible)
possible <- rbind(mexloc,unqloc)
possloc <- unique(possible[duplicated(possible),])
#head(possible)
head(possloc)
possible <- rbind(mexloc,unqloc, order(Locality))
help(order)
dupes <- unique(mexloc[duplicated(mexloc[i,]),])
head(dupes)
head(allfiles)
unqloc <- unique(mexloc, nmax=1)
head(unqloc)
head(unqloc)
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- unique(mexloc[duplicated(mexloc[i,]),])
}
allfiles <- mexloc[i,]
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- unique(mexloc[duplicated(mexloc[i,]),])
}
head(allfiles)
head(dupes)
mexloc[duplicated(mexloc[i,]
mexloc[duplicated(mexloc[i,
for (i in 1:300){
allfiles <- mexloc[i,]
dupes <- unique(mexloc[i,], nmax=1)
}
head(dupes)
for (i in 1:300){
listfiles <- mexloc[i,]
dupelist <- unique(mexloc[i,], nmax=1)
}
head(dupelist)
for (i in 1:300){
listfiles <- mexloc[i,]
dupelist <- unique(mexloc[i,], nmax=1)
return <-  ifelse(listfiles==dupelsit, print(i))
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
print(i)
return <-  ifelse(listfiles==dupelsit, print(i))
return <-  ifelse(listfiles==dupelist, print(i))
for (i in 1:300){
listfiles <- mexloc[i,]
dupelist <- unique(mexloc[i,], nmax=1)
head(dupelist) also only printing the last value(300)
return
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
##data frame of relevant Mexico locality data:
mexloc <- mexlocfull[,c(4:9)]
#head(mexloc)
## how to subset mexloc Localities - not sure if I will use this for anything yet:
#mexlocsub <- subset(mexloc, select = Locality)
#summary(mexlocsub)
#head(mexlocsub)
## prints TRUE or FALSE for each row.
## TRUE - duplicate locality
## FALSE - there is no duplicate or the first of a set of duplicate localities is read.
dupe <- duplicated(mexloc)
#head(dupe)
## list of unique duplicated localities
unqloc <- unique(mexloc, nmax=1)
#unqloc <- unique(mexloc[duplicated(mexloc),]) also works
#summary(unqloc)
#head(unqloc)
for (i in 1:300){
for (j in 1:300){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(j))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:300){
listfiles <- mexloc[i,]
dupelist <- unique(mexloc[i,], nmax=1)
return <-  ifelse(listfiles==dupelist, print(i), print(no)) ##my idea was to see if I am able to find the duplicates then print a UID # to locate them
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:300){
for (j in 1:300){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(j), print(no))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
head(listfiles)
for (i in 1:300){
for (j in 1:300){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(j), print("no"))
}
}
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(j), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
mexlocfull <- read.table("PBI_Mexico_data.txt", header = TRUE, sep = "\t" ,fill = TRUE, stringsAsFactors = FALSE)
##data frame of relevant Mexico locality data:
mexloc <- mexlocfull[,c(4:9)]
#head(mexloc)
## how to subset mexloc Localities - not sure if I will use this for anything yet:
#mexlocsub <- subset(mexloc, select = Locality)
#summary(mexlocsub)
#head(mexlocsub)
## prints TRUE or FALSE for each row.
## TRUE - duplicate locality
## FALSE - there is no duplicate or the first of a set of duplicate localities is read.
dupe <- duplicated(mexloc)
#head(dupe)
## list of unique duplicated localities
unqloc <- unique(mexloc, nmax=1)
#unqloc <- unique(mexloc[duplicated(mexloc),]) also works
#summary(unqloc)
#head(unqloc)
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(j), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
head(mexloc)
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(Locality), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[i,]==mexloc[j,], print("yes"), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[,i]==mexloc[,j], print("yes"), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[,i]==mexloc[,j], print(i), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
for (i in 1:10){
for (j in 1:10){
return <-  ifelse(unqloc[i,]==mexloc[j,], print(i), print("no"))
}
}
#head(listfiles) this is only printing the last value(300)
#head(dupelist) also only printing the last value(300)
return
